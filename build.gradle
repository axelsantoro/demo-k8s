/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'

    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'
    id 'org.springframework.boot' version '2.1.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'org.flywaydb.flyway' version '5.2.4'
    id 'com.bmuschko.docker-remote-api' version '4.1.0'
}


repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-logging:2.1.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.1.1.RELEASE'
    implementation 'com.microsoft.sqlserver:mssql-jdbc:7.0.0.jre10'

    testImplementation 'org.codehaus.groovy:groovy-all:2.5.4'
    testImplementation 'org.spockframework:spock-core:1.2-groovy-2.5'
    testImplementation 'junit:junit:4.12'
}

flyway {
    url = 'jdbc:sqlserver://localhost:1433;databaseName=demo'
    user = 'sa'
    password = 'Pa$$w0rd1'
    baselineOnMigrate = true
    baselineVersion = 0
    schemas = ["dbo"]
}

def appVersion = System.properties['appVersion'] ?: '0.0.1-SNAPSHOT'
println "appVersion[$appVersion]"

group = 'com.grupoesfera'
version = appVersion
sourceCompatibility = 10

def apiName = System.properties['apiName'] ?: 'app'


archivesBaseName = "demo-k8s"

// ===== Docker

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile


def dockerRegistyUsername = System.properties['dockerRegistyUsername']
def dockerRegistyPassword = System.properties['dockerRegistyPassword']

docker {

    registryCredentials {
        username = "$dockerRegistyUsername"
        password = "$dockerRegistyPassword"
    }
}

task createDockerfile(type: Dockerfile) {

    dependsOn build
    destFile = project.file("${buildDir}/libs/Dockerfile")
    from 'openjdk:10-jdk-slim'
    volume "/tmp"
    label(['maintainer': 'maty "matias.gonzalez@grupoesfera.com.ar"'])
    addFile "./${archivesBaseName}-${version}.jar", "/app.jar"
    runCommand "sh -c 'touch /app.jar'"
    environmentVariable "JAVA_OPTS", '""'
    entryPoint "sh", "-c", "java \$JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /app.jar"
}


def dockerRegistry = "matitanio"
task buildImage(type: DockerBuildImage) {

    dependsOn createDockerfile
    inputDir = createDockerfile.destFile.get().asFile.parentFile
    tag = "${dockerRegistry}/${archivesBaseName}:${version}"
}

task pushImage(type: DockerPushImage) {

    dependsOn buildImage
    imageName = buildImage.tag
}

// ===== End Docker
