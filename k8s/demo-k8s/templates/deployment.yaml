apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "demo-k8s.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "demo-k8s.name" . }}
    helm.sh/chart: {{ include "demo-k8s.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "demo-k8s.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "demo-k8s.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
      - configMap:
          items:
          - key: application.properties
            path: application.properties
          name: configmap-{{ .Chart.Name }}
        name: configmap
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: JAVA_OPTS
            value: -Dspring.config.location=/usr/share/application.properties
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: demo-k8s-secret
                key: spring.datasource.username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: demo-k8s-secret
                key: spring.datasource.password
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
          - mountPath: /usr/share/application.properties
            subPath: application.properties
            name: configmap
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
